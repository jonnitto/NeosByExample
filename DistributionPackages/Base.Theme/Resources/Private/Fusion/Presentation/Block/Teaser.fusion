prototype(Base.Theme:Block.Teaser) < prototype(Neos.Fusion:Component) {
    @propTypes {
        headline = ${PropTypes.string}
        text = ${PropTypes.string}
        label = ${PropTypes.string}
        labelHref = ${PropTypes.string}
        href = ${PropTypes.string}
        date = ${PropTypes.any}
        alternativeText = ${PropTypes.string}
    }
    @styleguide {
        props {
            headline = 'Rock Star/Ninja donuts in the break room'
            text = 'commitment to the cause and it is all exactly as i said, but i don\'t like it yet win-win-win. Back-end of third quarter hit the ground running and goalposts so mobile friendly, yet time vampire I just wanted to give you a heads-up let\'s take this conversation offline.'
            label = 'Office Ipsum'
            labelHref = '#'
            href = '#'
            alternativeText = 'Alternative text'
            placeholder = false
            date = ${Date.now()}
            imageSource = Carbon.Image:Helper.ImageSource {
                outputDummy = true
            }
        }
    }

    @if.hasHrefAndContent = ${this.placeholder || (this.href && (this.headline || this.text))}

    _classes = Neos.Fusion:DataStructure {
        root = "lg:basis-[calc(33.33333%-theme(spacing.10))] flex flex-col shadow-lg overflow-hidden"
        figure = "flex-shrink-0 aspect-w-15 aspect-h-8"
        content = "flex-1 bg-white p-6 flex flex-col justify-between"
    }

    renderer = afx`
        <div
            @if={props.placeholder}
            aria-hidden="true"
            class={props._classes.root}
        >
            <div class={[props._classes.figure, "bg-slate-100 animate-pulse"]}></div>
            <div class={[props._classes.content]}>
                <div class="flex-1 min-h-48 flex justify-center items-center animate-pulse">
                    <Base.Theme:Atom.Icon icon="loading" class="h-5 w-5 animate-spin"/>
                </div>
            </div>
        </div>

        <div
            @if={!props.placeholder}
            class={[props._classes.root, "relative"]}
        >
            <Base.Theme:Atom.Image
                imageSource={props.imageSource}
                image={props.image}
                alternativeText={props.alternativeText}
                figureAttributes.class={[props._classes.figure, "bg-slate-50"]}
                width={360}
                height={192}
            />
            <div class={props._classes.content}>
                <div class="flex-1">
                    <a
                        @if={props.label && props.labelHref}
                        href={props.labelHref}
                        class="relative z-10 text-sm font-medium text-main hover:underline"
                    >
                        {props.label}
                    </a>
                    <a href={props.href} class="block mt-2 group">
                        <span class="absolute inset-0"></span>
                        <p @if={props.headline} class="group-hover:underline text-xl font-semibold text-slate-900">
                            {props.headline}
                        </p>
                        <p @if={props.text} class="mt-3 text-base text-slate-500">
                            {props.text}
                        </p>
                    </a>
                </div>
                <div class="mt-6 flex space-x-1 text-sm text-slate-500 items-center">
                    <time @if={props.date} datetime={Date.format(props.date, 'Y-m-d')}>
                        {Date.formatCldr(props.date, 'd. MMMM y')}
                    </time>
                </div>
            </div>
        </div>
    `
}
